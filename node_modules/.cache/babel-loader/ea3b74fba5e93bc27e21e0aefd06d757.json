{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _toConsumableArray = require(\"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar fill = require('fill-range');\nvar utils = require('./utils');\nvar compile = function compile(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var walk = function walk(node) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var invalidBlock = utils.isInvalidBrace(parent);\n    var invalidNode = node.invalid === true && options.escapeInvalid === true;\n    var invalid = invalidBlock === true || invalidNode === true;\n    var prefix = options.escapeInvalid === true ? '\\\\' : '';\n    var output = '';\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n    if (node.value) {\n      return node.value;\n    }\n    if (node.nodes && node.ranges > 0) {\n      var args = utils.reduce(node.nodes);\n      var range = fill.apply(void 0, _toConsumableArray(args).concat([_objectSpread(_objectSpread({}, options), {}, {\n        wrap: false,\n        toRegex: true\n      })]));\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? \"(\".concat(range, \")\") : range;\n      }\n    }\n    if (node.nodes) {\n      var _iterator = _createForOfIteratorHelper(node.nodes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          output += walk(child, node);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return output;\n  };\n  return walk(ast);\n};\nmodule.exports = compile;","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_objectSpread","_toConsumableArray","fill","utils","compile","ast","options","arguments","length","undefined","walk","node","parent","invalidBlock","isInvalidBrace","invalidNode","invalid","escapeInvalid","prefix","output","isOpen","value","isClose","type","prev","nodes","ranges","args","reduce","range","apply","concat","wrap","toRegex","_iterator","_step","s","n","done","child","err","e","f","module","exports"],"sources":["/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/braces/lib/compile.js"],"sourcesContent":["'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}