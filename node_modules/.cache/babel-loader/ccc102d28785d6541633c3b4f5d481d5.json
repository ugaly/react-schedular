{"ast":null,"code":"import _regeneratorRuntime from \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/src/App.js\";\n/*\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\n\nexport default function App() {\n  return (\n    <Scheduler\n      view=\"week\"\n      events={EVENTS}\n      selectedDate={new Date(2021, 4, 5)}\n    />\n  );\n}\n*/\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  var currentDate = new Date();\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event, action) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log(event, action);\n            if (action === \"edit\") {\n              /** PUT event to remote DB */\n            } else if (action === \"create\") {\n              /**POST event to remote DB */\n            }\n            /**\n             * Make sure to return 4 mandatory fields:\n             * event_id: string|number\n             * title: string\n             * start: Date|string\n             * end: Date|string\n             * ....extra other fields depend on your custom fields/editor properties\n             */\n            // Simulate http request: return added/edited event\n            return _context.abrupt(\"return\", new Promise(function (res, rej) {\n              setTimeout(function () {\n                res(_objectSpread(_objectSpread({}, event), {}, {\n                  event_id: event.event_id || Math.random()\n                }));\n              }, 3000);\n            }));\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleConfirm(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(deletedId) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (res, rej) {\n              setTimeout(function () {\n                res(deletedId);\n              }, 3000);\n            }));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function handleDelete(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Scheduler, {\n      view: \"week\",\n      events: EVENTS,\n      onConfirm: handleConfirm,\n      onDelete: handleDelete\n\n      /*remoteEvents={fetchRemote}*/\n\n      /*week={{\n       weekDays: [0, 1, 2, 3, 4, 5, 6],\n       weekStartOn: 6,\n       startHour: 8,\n       endHour: 19,\n       step: 30\n      }}*/,\n\n      week: {\n        weekDays: [0, 1, 2, 3, 4, 5, 6],\n        weekStartOn: 1,\n        startHour: 8,\n        endHour: 20,\n        step: 30\n      },\n      editable: false,\n      deletable: false,\n      selectedDate: currentDate // Use the current date and time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Scheduler","EVENTS","useState","jsxDEV","_jsxDEV","App","currentDate","Date","handleConfirm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","action","wrap","_callee$","_context","prev","next","console","log","abrupt","Promise","res","rej","setTimeout","_objectSpread","event_id","Math","random","stop","_x","_x2","apply","arguments","handleDelete","_ref2","_callee2","deletedId","_callee2$","_context2","_x3","children","view","events","onConfirm","onDelete","week","weekDays","weekStartOn","startHour","endHour","step","editable","deletable","selectedDate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/src/App.js"],"sourcesContent":["/*\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\n\nexport default function App() {\n  return (\n    <Scheduler\n      view=\"week\"\n      events={EVENTS}\n      selectedDate={new Date(2021, 4, 5)}\n    />\n  );\n}\n*/\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\nimport {useState} from \"react\";\n\nexport default function App() {\n  const currentDate = new Date();\n\n\nconst handleConfirm = async (event, action) => {\n    console.log(event, action);\n    if (action === \"edit\") {\n      /** PUT event to remote DB */\n    } else if (action === \"create\") {\n      /**POST event to remote DB */\n    }\n    /**\n     * Make sure to return 4 mandatory fields:\n     * event_id: string|number\n     * title: string\n     * start: Date|string\n     * end: Date|string\n     * ....extra other fields depend on your custom fields/editor properties\n     */\n    // Simulate http request: return added/edited event\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res({\n          ...event,\n          event_id: event.event_id || Math.random()\n        });\n      }, 3000);\n    });\n  };\n\n\n\nconst handleDelete = async (deletedId) => {\n    // Simulate http request: return the deleted id\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res(deletedId);\n      }, 3000);\n    });\n  };\n\n\n\n\n  return (\n      <div>\n\n       <Scheduler\n      view=\"week\"\n      events={EVENTS}\n      onConfirm={handleConfirm}\n       onDelete={handleDelete}\n\n       /*remoteEvents={fetchRemote}*/\n\n       /*week={{\n        weekDays: [0, 1, 2, 3, 4, 5, 6],\n        weekStartOn: 6,\n        startHour: 8,\n        endHour: 19,\n        step: 30\n      }}*/\n\n       week={{\n            weekDays: [0, 1, 2, 3, 4, 5, 6],\n            weekStartOn: 1,\n            startHour: 8,\n            endHour: 20,\n            step: 30,\n\n          }}\n\n          editable={false}\n          deletable={false}\n\n      selectedDate={currentDate} // Use the current date and time\n    />\n      </div>\n\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}