{"ast":null,"code":"'use strict';\n\nvar stringReplaceAll = function stringReplaceAll(string, substring, replacer) {\n  var index = string.indexOf(substring);\n  if (index === -1) {\n    return string;\n  }\n  var substringLength = substring.length;\n  var endIndex = 0;\n  var returnValue = '';\n  do {\n    returnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n    endIndex = index + substringLength;\n    index = string.indexOf(substring, endIndex);\n  } while (index !== -1);\n  returnValue += string.substr(endIndex);\n  return returnValue;\n};\nvar stringEncaseCRLFWithFirstIndex = function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n  var endIndex = 0;\n  var returnValue = '';\n  do {\n    var gotCR = string[index - 1] === '\\r';\n    returnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n    endIndex = index + 1;\n    index = string.indexOf('\\n', endIndex);\n  } while (index !== -1);\n  returnValue += string.substr(endIndex);\n  return returnValue;\n};\nmodule.exports = {\n  stringReplaceAll: stringReplaceAll,\n  stringEncaseCRLFWithFirstIndex: stringEncaseCRLFWithFirstIndex\n};","map":{"version":3,"names":["stringReplaceAll","string","substring","replacer","index","indexOf","substringLength","length","endIndex","returnValue","substr","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR","module","exports"],"sources":["/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/jest-util/node_modules/chalk/source/util.js"],"sourcesContent":["'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAK;EACzD,IAAIC,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACH,SAAS,CAAC;EACrC,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;IACjB,OAAOH,MAAM;EACd;EAEA,IAAMK,eAAe,GAAGJ,SAAS,CAACK,MAAM;EACxC,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,WAAW,GAAG,EAAE;EACpB,GAAG;IACFA,WAAW,IAAIR,MAAM,CAACS,MAAM,CAACF,QAAQ,EAAEJ,KAAK,GAAGI,QAAQ,CAAC,GAAGN,SAAS,GAAGC,QAAQ;IAC/EK,QAAQ,GAAGJ,KAAK,GAAGE,eAAe;IAClCF,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACH,SAAS,EAAEM,QAAQ,CAAC;EAC5C,CAAC,QAAQJ,KAAK,KAAK,CAAC,CAAC;EAErBK,WAAW,IAAIR,MAAM,CAACS,MAAM,CAACF,QAAQ,CAAC;EACtC,OAAOC,WAAW;AACnB,CAAC;AAED,IAAME,8BAA8B,GAAG,SAAjCA,8BAA8BA,CAAIV,MAAM,EAAEW,MAAM,EAAEC,OAAO,EAAET,KAAK,EAAK;EAC1E,IAAII,QAAQ,GAAG,CAAC;EAChB,IAAIC,WAAW,GAAG,EAAE;EACpB,GAAG;IACF,IAAMK,KAAK,GAAGb,MAAM,CAACG,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI;IACxCK,WAAW,IAAIR,MAAM,CAACS,MAAM,CAACF,QAAQ,EAAE,CAACM,KAAK,GAAGV,KAAK,GAAG,CAAC,GAAGA,KAAK,IAAII,QAAQ,CAAC,GAAGI,MAAM,IAAIE,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,GAAGD,OAAO;IAC3HL,QAAQ,GAAGJ,KAAK,GAAG,CAAC;IACpBA,KAAK,GAAGH,MAAM,CAACI,OAAO,CAAC,IAAI,EAAEG,QAAQ,CAAC;EACvC,CAAC,QAAQJ,KAAK,KAAK,CAAC,CAAC;EAErBK,WAAW,IAAIR,MAAM,CAACS,MAAM,CAACF,QAAQ,CAAC;EACtC,OAAOC,WAAW;AACnB,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAG;EAChBhB,gBAAgB,EAAhBA,gBAAgB;EAChBW,8BAA8B,EAA9BA;AACD,CAAC"},"metadata":{},"sourceType":"script"}