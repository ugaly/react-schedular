{"ast":null,"code":"import _slicedToArray from \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/src/App.js\",\n  _s = $RefreshSig$();\n/*\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\n\nexport default function App() {\n  return (\n    <Scheduler\n      view=\"week\"\n      events={EVENTS}\n      selectedDate={new Date(2021, 4, 5)}\n    />\n  );\n}\n*/\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var currentDate = new Date(); // Create a Date instance with the current date and time\n\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n\n  // Function to handle date selection\n  var handleDateChange = function handleDateChange(date) {\n    // Check if the selected date is not in the past\n    var currentDate = new Date();\n    if (date >= currentDate) {\n      setSelectedDate(date);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate.toISOString().split(\"T\")[0],\n      min: new Date().toISOString().split(\"T\")[0],\n      onChange: function onChange(e) {\n        return handleDateChange(new Date(e.target.value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scheduler, {\n      view: \"week\",\n      events: EVENTS,\n      week: {\n        weekDays: [0, 1, 2, 3, 4, 5, 6],\n        weekStartOn: 6,\n        startHour: 8,\n        endHour: 19,\n        step: 30\n      },\n      editable: false,\n      deletable: false,\n      selectedDate: selectedDate // Use the current date and time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Scheduler","EVENTS","useState","jsxDEV","_jsxDEV","App","_s","currentDate","Date","_useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","handleDateChange","date","children","type","value","toISOString","split","min","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","view","events","week","weekDays","weekStartOn","startHour","endHour","step","editable","deletable","_c","$RefreshReg$"],"sources":["/home/ugaly/Desktop/semister 2/react-scheduler-demo-standard/src/App.js"],"sourcesContent":["/*\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\n\nexport default function App() {\n  return (\n    <Scheduler\n      view=\"week\"\n      events={EVENTS}\n      selectedDate={new Date(2021, 4, 5)}\n    />\n  );\n}\n*/\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport { EVENTS } from \"./events\";\nimport {useState} from \"react\";\n\nexport default function App() {\n  const currentDate = new Date(); // Create a Date instance with the current date and time\n\n   const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Function to handle date selection\n  const handleDateChange = (date) => {\n    // Check if the selected date is not in the past\n    const currentDate = new Date();\n    if (date >= currentDate) {\n      setSelectedDate(date);\n    }\n  };\n\n\n  return (\n      <div>\n        <input\n        type=\"date\"\n        value={selectedDate.toISOString().split(\"T\")[0]}\n        min={new Date().toISOString().split(\"T\")[0]}\n        onChange={(e) => handleDateChange(new Date(e.target.value))}\n      />\n       <Scheduler\n      view=\"week\"\n      events={EVENTS}\n       week={{\n        weekDays: [0, 1, 2, 3, 4, 5, 6],\n        weekStartOn: 6,\n        startHour: 8,\n        endHour: 19,\n        step: 30\n      }}\n\n\n\n          editable={false}\n          deletable={false}\n\n      selectedDate={selectedDate} // Use the current date and time\n    />\n      </div>\n\n  );\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE/B,IAAAC,SAAA,GAAwCP,QAAQ,CAAC,IAAIM,IAAI,CAAC,CAAC,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;;EAErC;EACA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAK;IACjC;IACA,IAAMR,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,IAAIO,IAAI,IAAIR,WAAW,EAAE;MACvBM,eAAe,CAACE,IAAI,CAAC;IACvB;EACF,CAAC;EAGD,oBACIX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MACAa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEN,YAAY,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE;MAChDC,GAAG,EAAE,IAAIb,IAAI,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE;MAC5CE,QAAQ,EAAE,SAAAA,SAACC,CAAC;QAAA,OAAKT,gBAAgB,CAAC,IAAIN,IAAI,CAACe,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC,CAAC;MAAA;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACDxB,OAAA,CAACJ,SAAS;MACX6B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAE7B,MAAO;MACd8B,IAAI,EAAE;QACLC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/BC,WAAW,EAAE,CAAC;QACdC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE;MACR,CAAE;MAIEC,QAAQ,EAAE,KAAM;MAChBC,SAAS,EAAE,KAAM;MAErB1B,YAAY,EAAEA,YAAa,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAGZ;AAACtB,EAAA,CA5CuBD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}